# Whether files should be placed in a directory named after the server they have been pulled from.
use-server-name-directories = true

# Number of concurrent HTTP Requests to make
concurrent-requests = 5

# A list of servers which serve RSS/Atom feeds
[servers]

# A uncategorized server instance (see categories, below)
"Rust Blog" = { url = "https://blog.rust-lang.org/feed.xml" }

# Another server instance detailing available per-feed settings
[servers."Plato Releases"]
# the URL of the feed
url = "https://github.com/baskerville/plato/releases.atom"

# Whether to download any images on the page and include them in the epub.
# The default is true
include-images = false

# Whether to download the full article, or just use the content provided in the feed.
# Omit this setting to download the full article, if the feed does not provide any content.
# false specifies to never download the full article.
# true specifies to always download the full article.
#download-full-article = true

# Whether to filter a full article down to a single element.
# This does not apply if download-full-article is false. The default is true.
# Example:
# ```html
# <!DOCTYPE html>
# <html lang="en">
#     <head></head>
#     <body>
#         <nav></nav>
#         <main>Main Content!</main>
#         <div id="footer"></footer>
#     </body>
# </html>
# ```
# becomes
# ```html
# <main>Main Content!</main>
# ```
enable-filter = true

# A [CSS selector](https://www.w3schools.com/cssref/css_selectors.php)
# to filter down a full article to a single element.
# The default list of common selectors is used as fallback.
# Omit to only use the default list.
# This does not apply if enable-filter is false.
#filter-element = ""

# The author to set for the entries in the feed, when the feed does not specify.
# Omit this setting to use the title of the feed as the default author.
# "" specifies not to set an author, when the feed does not specify one.
# Any other value makes that the default author.
default-author = ""

# Hooks Category
# servers can be organized into categories, like the Hooks category below.
# Each category gets its own directories, regardless of `use-server-name-directories`.
# "server name directories" get placed in the category directory, if on;
# otherwise, entries from feeds of the same category are saved directly in its category's directory
[servers.Hooks]
"Plato Feed Releases" = { url = "https://github.com/mcdevnagh/plato-feed/releases.atom" }
"Plato OPDS Releases" = { url = "https://github.com/videah/plato-opds/releases.atom" }

# Categories can have sub-categories, and sub-categories can have sub-categories ad infinitum
# The directory structure goes Category, Sub-category, Sub-category, etc.
[servers.Hooks.Unmaintained]
"Plato Calibre Releases" = { url = "https://github.com/buckley-w-david/plato-calibre/releases.atom" }
